% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GloptiPolyRegion.R
\name{GloptiPolyRegion}
\alias{GloptiPolyRegion}
\title{Compute confidence regions for polynomial models' optima}
\usage{
GloptiPolyRegion(X, y, degree, lb, ub, B = 200, alpha = 0.05,
  maximization = TRUE, verbose = TRUE)
}
\arguments{
\item{X}{numeric matrix of shape (N, k); N is the sample size; k is the 
number of variables, which can be 2, 3, 4 and 5; X specifies the 
design matrix}

\item{y}{numeric vector of shape (N, 1); y specifies the responses}

\item{degree}{integer scalor; degree specifies the order of the polynomial 
model, which can be 2 or 3}

\item{lb}{numeric vector of shape (1, k); lb specifies the lower bounds for
the k variables}

\item{ub}{numeric vector of shape (1, k); ub specifies the upper bounds for 
the k variables}

\item{B}{integer scalor; B specifies the number of bootstrap operations}

\item{alpha}{numeric scalor between 0 and 1; alpha specifies the nominal 
confidence level, 1 - alpha, of the confidence region}

\item{maximization}{boolean scalor; if specifies whether the algorithm 
computes the confidence region for the maxima or minima}

\item{verbose}{boolean scalor; it specifies whether to display running status}
}
\value{
a figure displaying the confidence region of the true optimum,
        projected onto each pairwise-variable planes and a list consisting
        of 2 components: 
        \describe{
          \item{boot_optima}{numeric matrix of shape ((1 - alpha)B, k);
                               it contains the (1 - alpha)B bootstrap optima}
          \item{boost_optimum}{numeric vector of shape (1, k); the boosted 
                                 optimum; computed by taking the column average
                                 of boot_optima}
        }
}
\description{
Compute confidence regions for polynomial models' optima
}
\examples{
\dontrun{
# run GloptiPolyRegion on a quadratic, 3 vars example
out <- GloptiPolyRegion(X = quad_3D[, 1:3], y = quad_3D[, 4], degree = 2, 
                        lb = c(-2, -2, -2), ub = c(2, 2, 2), B = 2000, alpha = 0.1, 
                        maximization = TRUE, verbose = TRUE)
# check result
str(out)

# define subroutines to draw 3D confidence reigon
library(rgl)
plot_3D_CR_demo <- function(X){
  plot3d(X, col = "green",
         type = "p", size = 5, alpha = 0.01,
         xlab = "x1", ylab = "x2", zlab = "x3",
         xlim = c(-2, 2), ylim = c(-2, 2), zlim = c(-2, 2))
  crownhull(X, col = "green", alpha = 0.2)
  points3d(X, add = TRUE, col = "green",
           size = 2, alpha = 0.5)
  X_ave <- apply(X, 2, mean)
  points3d(X_ave[1],
           X_ave[2],
           X_ave[3],
           add = TRUE, col = "red",
           size = 10)
}
crownhull <- function(xyz, plotit = TRUE, col = "green", alpha = 0.8){
if(is.list(xyz) && !is.data.frame(xyz))
  p <- as.matrix(do.call("rbind", xyz))
else
  p <- as.matrix(xyz)
 ch <- geometry::convhulln(p, "FA")
if(plotit){
  ch2 <- t(geometry::convhulln(p, "Qt"))
  triangles3d(p[ch2,1], p[ch2,2], p[ch2,3], col = col, alpha = alpha, add = TRUE)
}
return(list(crownvolume = ch$vol, crownsurface = ch$area))
}
 
# draw 3D confidence region based on out
plot_3D_CR_demo(out$boot_optima)

# run GloptiPolyRegion on a cubic, 5 vars example
out <- GloptiPolyRegion(X = cubic_5D$design_matrix, y = cubic_5D$response,  
                        degree = 3, lb = rep(0, 5), ub = rep(5, 5), B = 2000,  
                        alpha = 0.05, maximization = TRUE, verbose = TRUE)
# check result
str(out)
}
}
\author{
E. del Castillo, Penn State University, IME and Statistics Depts,
        John Hunt and James Rapkin, University of Exeter, Dept. of Biosciences,
        Peng Chen and Adam Meyers, Penn State University, IME Dept.
}
